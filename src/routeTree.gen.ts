/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LandingImport } from './routes/_landing'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as LandingIndexImport } from './routes/_landing/index'
import { Route as LandingSignupImport } from './routes/_landing/signup'
import { Route as LandingProductsImport } from './routes/_landing/products'
import { Route as LandingPricesImport } from './routes/_landing/prices'
import { Route as LandingLoginImport } from './routes/_landing/login'
import { Route as LandingAboutImport } from './routes/_landing/about'
import { Route as DashboardUsersImport } from './routes/_dashboard/users'

// Create/Update Routes

const LandingRoute = LandingImport.update({
  id: '/_landing',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LandingIndexRoute = LandingIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LandingRoute,
} as any)

const LandingSignupRoute = LandingSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => LandingRoute,
} as any)

const LandingProductsRoute = LandingProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => LandingRoute,
} as any)

const LandingPricesRoute = LandingPricesImport.update({
  id: '/prices',
  path: '/prices',
  getParentRoute: () => LandingRoute,
} as any)

const LandingLoginRoute = LandingLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LandingRoute,
} as any)

const LandingAboutRoute = LandingAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LandingRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/users': {
      id: '/_dashboard/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/_landing/about': {
      id: '/_landing/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LandingAboutImport
      parentRoute: typeof LandingImport
    }
    '/_landing/login': {
      id: '/_landing/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LandingLoginImport
      parentRoute: typeof LandingImport
    }
    '/_landing/prices': {
      id: '/_landing/prices'
      path: '/prices'
      fullPath: '/prices'
      preLoaderRoute: typeof LandingPricesImport
      parentRoute: typeof LandingImport
    }
    '/_landing/products': {
      id: '/_landing/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof LandingProductsImport
      parentRoute: typeof LandingImport
    }
    '/_landing/signup': {
      id: '/_landing/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof LandingSignupImport
      parentRoute: typeof LandingImport
    }
    '/_landing/': {
      id: '/_landing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingIndexImport
      parentRoute: typeof LandingImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardUsersRoute: typeof DashboardUsersRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardUsersRoute: DashboardUsersRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface LandingRouteChildren {
  LandingAboutRoute: typeof LandingAboutRoute
  LandingLoginRoute: typeof LandingLoginRoute
  LandingPricesRoute: typeof LandingPricesRoute
  LandingProductsRoute: typeof LandingProductsRoute
  LandingSignupRoute: typeof LandingSignupRoute
  LandingIndexRoute: typeof LandingIndexRoute
}

const LandingRouteChildren: LandingRouteChildren = {
  LandingAboutRoute: LandingAboutRoute,
  LandingLoginRoute: LandingLoginRoute,
  LandingPricesRoute: LandingPricesRoute,
  LandingProductsRoute: LandingProductsRoute,
  LandingSignupRoute: LandingSignupRoute,
  LandingIndexRoute: LandingIndexRoute,
}

const LandingRouteWithChildren =
  LandingRoute._addFileChildren(LandingRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LandingRouteWithChildren
  '/users': typeof DashboardUsersRoute
  '/about': typeof LandingAboutRoute
  '/login': typeof LandingLoginRoute
  '/prices': typeof LandingPricesRoute
  '/products': typeof LandingProductsRoute
  '/signup': typeof LandingSignupRoute
  '/': typeof LandingIndexRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardRouteWithChildren
  '/users': typeof DashboardUsersRoute
  '/about': typeof LandingAboutRoute
  '/login': typeof LandingLoginRoute
  '/prices': typeof LandingPricesRoute
  '/products': typeof LandingProductsRoute
  '/signup': typeof LandingSignupRoute
  '/': typeof LandingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_landing': typeof LandingRouteWithChildren
  '/_dashboard/users': typeof DashboardUsersRoute
  '/_landing/about': typeof LandingAboutRoute
  '/_landing/login': typeof LandingLoginRoute
  '/_landing/prices': typeof LandingPricesRoute
  '/_landing/products': typeof LandingProductsRoute
  '/_landing/signup': typeof LandingSignupRoute
  '/_landing/': typeof LandingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/users'
    | '/about'
    | '/login'
    | '/prices'
    | '/products'
    | '/signup'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/users'
    | '/about'
    | '/login'
    | '/prices'
    | '/products'
    | '/signup'
    | '/'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_landing'
    | '/_dashboard/users'
    | '/_landing/about'
    | '/_landing/login'
    | '/_landing/prices'
    | '/_landing/products'
    | '/_landing/signup'
    | '/_landing/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  LandingRoute: typeof LandingRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  LandingRoute: LandingRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/_landing"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/users"
      ]
    },
    "/_landing": {
      "filePath": "_landing.tsx",
      "children": [
        "/_landing/about",
        "/_landing/login",
        "/_landing/prices",
        "/_landing/products",
        "/_landing/signup",
        "/_landing/"
      ]
    },
    "/_dashboard/users": {
      "filePath": "_dashboard/users.tsx",
      "parent": "/_dashboard"
    },
    "/_landing/about": {
      "filePath": "_landing/about.tsx",
      "parent": "/_landing"
    },
    "/_landing/login": {
      "filePath": "_landing/login.tsx",
      "parent": "/_landing"
    },
    "/_landing/prices": {
      "filePath": "_landing/prices.tsx",
      "parent": "/_landing"
    },
    "/_landing/products": {
      "filePath": "_landing/products.tsx",
      "parent": "/_landing"
    },
    "/_landing/signup": {
      "filePath": "_landing/signup.tsx",
      "parent": "/_landing"
    },
    "/_landing/": {
      "filePath": "_landing/index.tsx",
      "parent": "/_landing"
    }
  }
}
ROUTE_MANIFEST_END */
